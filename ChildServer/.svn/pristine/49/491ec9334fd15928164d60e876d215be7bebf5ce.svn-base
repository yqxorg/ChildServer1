package com.zhuika.server;

import javax.jms.Connection;
import javax.jms.DeliveryMode;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

public class ActiveMqSender {

	private static final Logger logger = Logger.getLogger(ActiveMqSender.class);

	private Connection connection;
	private String subject = "Wearme.DEFAULTMQ";
	private ActiveMQConnectionFactory connectionFactory;
	private Session session;
	private Destination destination;
	private MessageProducer producer;

	public void startMQConn() throws JMSException {
		// 创建connection
		connectionFactory = new ActiveMQConnectionFactory("failover:(tcp://localhost:61616)?timeout=1000");
		connection = connectionFactory.createConnection();
		connection.start();
		// 创建session，设置消息确认机制
		session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
		// 创建destination
		destination = session.createQueue(subject);
		// 创建producer
		producer = session.createProducer(destination);
		// 设置JMS的持久性
		producer.setDeliveryMode(DeliveryMode.PERSISTENT);
		
		//destination = session.createTopic("QualityQueue2");
	}

	private void send(String msg) {
		// 创建connectionFaction
		try {
			// JMS消息体
//			msg += "filter=quality123";
			TextMessage message = session.createTextMessage(msg);			
			message.setObjectProperty("filter", "quality");
			
			// 发生消息message
			producer.send(message);
			logger.info("消息已经发送。。。。"+msg);
			// 关闭资源
			message.clearProperties();
		} catch (JMSException e) {
			// TODO Auto-generated catch block
			logger.error("JMSException"+e.toString());
			try {
				this.close();
			} catch (Throwable ignore) {
			}
			e.printStackTrace();
		}
	}

	private void close() throws JMSException {
//		if (producer != null) {
//			producer.close();
//			producer=null;
//		}
		if (connection != null) {
			connection.stop();
			connection.close();
//			connection =null;
		}
//		if (session != null) {
//			session.close();
//			session =null;
//		}
		System.out.println("关闭资源。。。。");
	}

	
	public void sendToMq(String info)
	{
		//ActiveMqSender acSend = new ActiveMqSender();
		try {
			//acSend.startMQConn();
			
//			for(int i=0;i<50;i++){
				
			this.send(info);
//			
//			Thread.sleep(100);
//			}
			//acSend.close();
		} catch (Exception e) {
				// TODO Auto-generated catch block
			   logger.error("Exception"+e.toString());
				e.printStackTrace();
				
			}
	}
	public static void main(String[] args) {
		PropertyConfigurator.configure("log4j.properties");
		// 代码启动activeMQ
		// BrokerService broker = new BrokerService();
		// try {
		// broker.addConnector("tcp://localhost:61616");
		// broker.start();
		//
		// } catch (Exception e) {
		// e.printStackTrace();
		// }
		
		ActiveMqSender sender = new ActiveMqSender();		
		sender.sendToMq("data123");
	}
}

//http://alvinalexander.com/java/jwarehouse/activemq/activemq-core/src/test/java/org/apache/activemq/network/index.shtml
